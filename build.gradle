plugins {
	id 'fabric-loom' version '1.5.7'
	id 'maven-publish'
//	id 'io.sentry.jvm.gradle' version '3.11.1'
}

version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenCentral()
}

//sentry {
//	// Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.
//	// This enables source context, allowing you to see your source
//	// code as part of your stack traces in Sentry.
//	includeSourceContext = true
//
//	org = 'cyberflame'
//	projectName = 'viewmodel-changer'
//	authToken = System.getenv('SENTRY_AUTH_TOKEN')
//}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

//	implementation 'io.sentry:sentry:6.26.0'

	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
}

base {
	archivesName = project.archives_base_name
}

processResources {
	inputs.property 'version', project.version

	filesMatching('fabric.mod.json') {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

tasks.register('sourcesJar', Jar) {
	dependsOn classes
//	dependsOn generateSentryDebugMetaPropertiesjava
	from sourceSets.main.allSource
}


java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from('LICENSE') {
		rename { "${it}_${base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
    maven {
      name = 'GitHubPackages'
      url = 'https://maven.pkg.github.com/cyberflamego/viewmodel-changer'
      credentials {
        username = System.getenv('GITHUB_ACTOR')
        password = System.getenv('GITHUB_TOKEN')
      }
    }
  }
}
